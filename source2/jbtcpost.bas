        REM THISPROGRAMWASGENERATEDUSINGTHEGENPGMPROGRAMWHICHISAPROPRIETR~
            *                                                           *~
            *  JJJJJ  BBBB   TTTTT   CCC   PPPP    OOO    SSS   TTTTT   *~
            *    J    B   B    T    C   C  P   P  O   O  S        T     *~
            *    J    BBBB     T    C      PPPP   O   O   SSS     T     *~
            *  J J    B   B    T    C   C  P      O   O      S    T     *~
            *   J     BBBB     T     CCC   P       OOO    SSS     T     *~
            *                                                           *~
            *-----------------------------------------------------------*~
            * JBTCPOST - Posts time card data generated by CDAN or      *~
            *            manually to the JBMASTR and JBVALUE2 via       *~
            *            JBPOST2.  Tosses the data from the TIFs to the *~
            *            MASTERs, and handles before/after logic.       *~
            *            Restartable by re-execution, control in SYSFILE*~
            *-----------------------------------------------------------*~
            * THIS PROGRAM CONTAINS VALUABLE TRADE SECRETS AND PROPRIE- *~
            * TARY ASSETS OF CAELUS ASSOCIATES, INC., SPOKANE, WA, EM-  *~
            * BODYING SUBSTANTIAL CREATIVE EFFORTS  AND CONFIDENTIAL    *~
            * INFORMATION.  UNAUTHORIZED USE, COPYING, DECOMPILING,     *~
            * TRANSLATING, DISCLOSURE, OR TRANSFER OF IT IS PROHIBITED. *~
            * COPYRIGHT (C) 1986  AN UNPUBLISHED WORK BY CAELUS ASSSO-  *~
            * CIATES, INC., SPOKANE, WA.  ALL RIGHTS RESERVED.          *~
            *-----------------------------------------------------------*~
            *                  M O D I F I C A T I O N S                *~
            *---WHEN---+----------------WHAT----------------------+-WHO-*~
            * 03/25/86 ! Original                                 ! KEN *~
            * 06/16/87 ! Standard Costing Changes                 ! ERN *~
            * 11/11/88 ! File format changes; add task code file  ! ERN *~
            * 09/10/90 ! G/L Export file modifications            ! RAC *~
            * 08/04/93 ! PRR 11818. Fixed costs passed to JBPOST2 ! JDH *~
            *          !   when labor & overhead is applied to the!     *~
            *          !   same bucket.                           !     *~
            *          ! PRR 12115. Added alt key to JBTCTASK.    !     *~
            * 11/28/93 ! Changed call and added call to JB2TIF to ! JDH *~
            *          !   avoid clogging the message queue.      !     *~
            * 02/08/95 ! PRR 13347 - CDA JT 02/04 transactions    ! RJH *~
            *          !   (direct charges) records are processed !     *~
            *          !   as if they had a 'N' status in buffer. !     *~
            *          !   File CDATCWRK selected and opened.     !     *~
            * 08/24/95 ! REMOVE PRR 13347 - the implimentation of ! RJH *~
            *          !   above PRR had undesirable effects.     !     *~
            * 08/13/96 ! Changes for the year 2000.               ! DXL *~
            PRODUCTOFCAELUSASSOCIATESSPOKANEWASHINGTONALLRIGHTSRESERVED**

        dim                                                              ~
            activity$4,                  /* Activity Code              */~
            adjaccount$16,               /* Adjustment Account (J.I.C.)*/~
            askhdr$40,                   /* Ask User header            */~
            askpf1$80,                   /* Ask User first line        */~
            askmid$80,                   /* Ask User second line       */~
            askpf2$80,                   /* Ask User third line        */~
            blankdate$8,                 /* Blank Date for Comparison  */~
            costs(12), costs$96,         /* Job costs array            */~
            cursor%(2),                  /* Cursor location for edit   */~
            date$8,                      /* Date for screen display    */~
            dept$4,                      /* Department Code            */~
            edtmessage$79,               /* Edit screen message        */~
            emp$12,                      /* CURRENT EMPLOYEE           */~
            errormsg$79,                 /* Error message              */~
            etype$12,                    /* CURRENT EARNINGS TYPE      */~
            freetext$40,                 /* TEXT FOR POSTING           */~
            fromdate$8,                  /* Time Card Date Range       */~
            fromemp$12,                  /* Employee Range             */~
            i$(24)80,                    /* Screen Image               */~
            inpmessage$79,               /* Informational Message      */~
            job$8,                       /* CURRENT JOB                */~
            lbrcls$4,                    /* Labor Class                */~
            lfac$(20)1,                  /* Field Attribute Characters */~
            line2$79,                    /* Second Line of Screen Headr*/~
            ovhdacct$9,                  /* OVERHEAD EXPENSE ACCOUNT   */~
            part$25,                     /* TEXT FIELD FOR JB2TIF      */~
            pf16$16,                     /* PF 16 PROMPT               */~
            postdate$6,                  /* SFC Posting date           */~
            postmsg$80,                  /* POSTING MESSAGE            */~
            postshift$1,                 /* SHIFT TO POST THIS RUN     */~
            plowkey$100,                 /* G. P. READ KEY             */~
            readkey$100,                 /* G. P. Read Key             */~
            record$250,                  /* G. P. RECORD BUFFER        */~
            set$8, setid$4,              /* Current Cost Set           */~
            shift$1,                     /* Work Shift                 */~
            status$1,                    /* Time Card Status           */~
            sum$1,                       /* JNLINFO VARIABLE           */~
            task$6,                      /* Time Card Task             */~
            task_file$1,                 /* Update task summary file?  */~
            task_type$1,                 /* TC Task type               */~
            tctojob$1,                   /* POST TIME CARDS TO JOBS?   */~
            tcdate$8,                    /* TIME CARD DATE             */~
            tcdatef$8,                   /* TIME CARD DATE FORMATTED   */~
            tfkey$50,                    /* Task File Key              */~
            todate$8,                    /* High Date Cuttoff          */~
            toemp$12,                    /* High Employee Cuttoff      */~
            userid$3,                    /* Current User Id            */~
            wc$4,                        /* CURRENT WORK CENTER        */~
            wipcacct$9,                  /* WIP CONTRA ACCOUNT         */~
            work$56                      /* JB2TIF WORK STRING         */~

        dim f2%(32),                     /* = 0 if the file is open    */~
            f1%(32),                     /* = 1 if READ was successful */~
            fs%(32),                     /* = 1 if file open, -1 if it */~
                                         /*   doesn't exist, or 0 if   */~
                                         /*   not yet checked (OPENCHCK*/~
            rslt$(32)20                  /* Text from file opening     */

        REM *************************************************************~
            *                  Release Version ID Section               *~
            *************************************************************
            dim cms2v$50
            cms2v$ = "R7.00.00 10/29/97 Year 2000 Compliancy            "
        REM *************************************************************

            mat f2% = con

                     /* The variable F2%() should not be modified.     */
                     /* FS%() also should not be modified (see         */
                     /* OPENCHCK).                                     */

        REM *************************************************************~
            *                  S E L E C T   F I L E S                  *~
            *                                                           *~
            *-----+----------+------------------------------------------*~
            *FILE#!  PRNAME  ! D E S C R I P T I O N                    *~
            *-----+----------+------------------------------------------*~
            * # 1 ! SYSFILE2 ! Caelus Management System Information     *~
            * # 2 ! JBTCBUFF ! Time Card Buffer (Daily Header)          *~
            * # 3 ! JBTCBUF2 ! Time Card Buffer (Daily Detail)          *~
            * # 4 ! JBTCMSTR ! Time Card Master (Daily Header)          *~
            * # 5 ! JBTCLINE ! Time Card Master (Daily Detail)          *~
            * # 6 ! USERINFO ! User Information File                    *~
            * # 7 ! JBTCTASK ! Summary by Task Code File                *~
            *************************************************************~
            *       File Selection and Open Calls                       *~
            *************************************************************

            select # 1, "SYSFILE2",                                      ~
                        varc,     indexed,  recsize =  500,              ~
                        keypos =    1, keylen =  20                      ~

            select # 2, "JBTCBUFF",                                      ~
                        varc,     indexed,  recsize =  200,              ~
                        keypos =    8, keylen =  18,                     ~
                        alt key  1, keypos =    2, keylen =  18,         ~
                            key  2, keypos =    1, keylen =  19          ~

            select # 3, "JBTCBUF2",                                      ~
                        varc,     indexed,  recsize =  200,              ~
                        keypos =    1, keylen =  25                      ~

            select # 4, "JBTCMSTR",                                      ~
                        varc,     indexed,  recsize =  200,              ~
                        keypos =    8, keylen =  18,                     ~
                        alt key  1, keypos =    2, keylen =  18,         ~
                            key  2, keypos =    1, keylen =  19          ~


            select # 5, "JBTCLINE",                                      ~
                        varc,     indexed,  recsize =  200,              ~
                        keypos =    1, keylen =  25                      ~

            select # 6, "USERINFO",                                      ~
                        varc,     indexed,  recsize =  150,              ~
                        keypos =    1, keylen =  3                       ~

            select # 7, "JBTCTASK",                                      ~
                        varc,     indexed,  recsize =  100,              ~
                        keypos =    1, keylen =  34,                     ~
                        alt key  1, keypos =   11, keylen =  6, dup

        call "SHOSTAT" ("Opening files.  One moment please.")
            rslt$(1), rslt$(2), rslt$(6) = "REQUIRED"
            call "OPENCHCK" (# 1, fs%( 1), f2%( 1),   0%, rslt$( 1))
            if fs%(1) < 0% then exit_program

            call "OPENCHCK" (# 6, fs%( 6), f2%( 6),   0%, rslt$( 6))
            if fs%(6) < 0% then exit_program

            call "OPENCHCK" (# 2, fs%( 2), f2%( 2),   0%, rslt$( 2))
            if fs%(2) < 0% then exit_program

            call "OPENCHCK" (# 3, fs%( 3), f2%( 3),   0%, rslt$( 3))
            call "OPENCHCK" (# 4, fs%( 4), f2%( 4), 300%, rslt$( 4))
            call "OPENCHCK" (# 5, fs%( 5), f2%( 5), 300%, rslt$( 5))

        REM *************************************************************~
            *                I N I T I A L I Z A T I O N                *~
            *-----------------------------------------------------------*~
            * Initializes information necessary for program.            *~
            *************************************************************

            blankdate$ = " "
            call "DATUFMTC" (blankdate$)

            call "EXTRACT" addr("ID", userid$)

            call "READ100" (#6, userid$, f1%(6))
                if f1%(6) = 0% then exit_user
            get #6, using L09110, postdate$
L09110:         FMT POS(34), CH(6)
            call "WHICHMON" (#1, postdate$, err%)
                if err%   = 0% then exit_date

            date$ = postdate$
            call "DATEFMT" (date$)

            call "READ100" (#1, "FISCAL DATES", f1%(1%))
               if f1%(1%) = 0% then exit_adj /* UNLIKELY AFTER WHICHMON */
            get #1 using L09210, adjaccount$
L09210:         FMT XX(416), CH(16)

            buckets% = 1%
            call "STCSETID" (buckets%, #1, set$, setid$)
            if buckets% = 0% then buckets% = 3%

            edtmessage$  = "To Modify Displayed Values, Position Cursor"&~
                           " to Desired Value & Press (ENTER)."

            task_file$ = "N"
            call "READ100" (#1, "SWITCHS.SFC", f1%(1))
            if f1%(1) = 1% then get #1 using L09330, task_file$
L09330:         FMT POS(35), CH(1)
            if task_file$ <> "Y" then task_file$ = "N"
            if task_file$ =  "Y" then                                    ~
                     call "OPENCHCK" (#7, fs%(7), f2%(7), 100%, rslt$(7))

            gosub dataload

        REM *************************************************************~
            *       I N P U T   M O D E   M A I N   P R O G R A M       *~
            *-----------------------------------------------------------*~
            * Handles normal input for data entry screens.              *~
            *************************************************************

        inputmode
            init(" ") fromemp$, fromdate$, toemp$, todate$, postshift$

        inputmoder
            init(" ") errormsg$, inpmessage$
            restart%, pstseq% = 0%
            gosub read_tctojob
            pf16$ = "(16)Exit Program"

            for fieldnr% = 1 to  3
                gosub'051(fieldnr%)
                      if enabled% = 0 then L10280
L10180:         gosub'111(fieldnr%)
                      if keyhit%  =  1 then gosub startover
                      if keyhit%  = 16 then       exit_program
                      if keyhit% <>  0 then       L10180
L10280:         gosub'151(fieldnr%)
                      if errormsg$ <> " " then L10180
            next fieldnr%

        REM *************************************************************~
            *        E D I T   M O D E   M A I N   P R O G R A M        *~
            *-----------------------------------------------------------*~
            * Handles operation of EDIT MODE for data entry screens.    *~
            *************************************************************

        editmode
            pf16$ = "(16)Post Data"

L11060:     gosub'111(0%)
                  if keyhit%  =  1 then gosub startover
                  if keyhit%  = 16 then       datasave
                  if keyhit% <>  0 then       L11060
                  if restart% <> 0 then       L11060
            fieldnr% = cursor%(1) - 5
            if fieldnr% < 1 or fieldnr% >  3 then L11060
            gosub'051(fieldnr%)
                  if enabled% = 0% then       L11060
L11140:     gosub'111(fieldnr%)
                  if keyhit%  =  1 then gosub startover
                  if keyhit% <>  0 then L11140
            gosub'151(fieldnr%)
                  if errormsg$ <> " " then L11140
            goto L11060

        REM *************************************************************~
            *             S A V E   D A T A   O N   F I L E             *~
            *-----------------------------------------------------------*~
            * Saves data on file after INPUT/EDITING.                   *~
            *************************************************************

        datasave
            if pstseq% <> 0% then L19100

            call "JNLINFO" ("03", "MTC", pstseq%, sum$, " ", postdate$,  ~
                            #1, f2%(1), ret%)

L19100:     gosub dataput

            key% = 0%
            if fromemp$ <> "ALL" then L19160
            if fromdate$ <> "ALL" then key% = 1%

L19160:     if fromdate$ <> "ALL" then L19200  /* UNFORMATTED AT DATAPUT */
               fromdate$ = all(hex(00))
               todate$   = all(hex(ff))

L19200:     if fromemp$ <> "ALL" then L19240
                fromemp$ = all(hex(00))
                toemp$   = all(hex(ff))

L19240:     if key% <> 0% then L19300
               readkey$ = str(fromemp$,,12) & str(fromdate$,,6)
               if str(fromdate$,4%,1%) = hex(00) then L19350
                  goto L19330

L19300:        readkey$ = str(fromdate$,,6) & str(fromemp$,,12)
               if str(fromemp$,,1) = hex(00) then L19350

L19330:     str(readkey$,,18) = str(readkey$,,18) addc all(hex(ff))

L19350:     call "SHOSTAT" ("Posting Time Card Data to Jobs.")

            gosub post_timecards

            readkey$ = "SFC.JBTCPOST.RST." & str(userid$)
            call "DELETE" (#1, readkey$, 20%)
            goto exit_program

        REM *************************************************************~
            *     D E F A U L T / E N A B L E   F O R   P A G E   1     *~
            *-----------------------------------------------------------*~
            * Sets DEFAULTS and ENABLES fields for Screen  1  of Input. *~
            *************************************************************

            deffn'051(fieldnr%)
                  enabled% = 1%
                  on fieldnr% gosub L20100,         /* Card Date Range  */~
                                    L20200,         /* Employee Range   */~
                                    L20300          /* SHIFT TO POST    */
                     return
L20100:     REM Default/Enable for Time Card Date Range
                if fromdate$ = " " or fromdate$ = blankdate$ ~
                                 then fromdate$ = "ALL"
                inpmessage$ = "Enter DATE range for time card selection."
                return
L20200:     REM Default/Enable for Employee Range
                if fromemp$ = " " then fromemp$ = "ALL"
                inpmessage$ = "Enter EMPLOYEE range for time card selecti~
        ~on."
                return
L20300:     REM DEFAULT/ENABLE FOR SHIFT TO POST
                inpmessage$ = "Enter SHIFT to post. ' ' = All or '1' - '4~
        ~'."
                return

        REM *************************************************************~
            * THIS PROGRAM CONTAINS VALUABLE TRADE SECRETS AND PROPRIE- *~
            * TARY ASSETS OF CAELUS ASSOCIATES, INC., SPOKANE, WA, EM-  *~
            * BODYING SUBSTANTIAL CREATIVE EFFORTS  AND CONFIDENTIAL    *~
            * INFORMATION.  UNAUTHORIZED USE, COPYING, DECOMPILING,     *~
            * TRANSLATING, DISCLOSURE, OR TRANSFER OF IT IS PROHIBITED. *~
            * COPYRIGHT (C) 1986  AN UNPUBLISHED WORK BY CAELUS ASSSO-  *~
            * CIATES, INC., SPOKANE, WA.  ALL RIGHTS RESERVED.          *~
            *************************************************************

        REM *************************************************************~
            * S T A R T   O V E R   L A S T   C H A N C E   S C R E E N *~
            *-----------------------------------------------------------*~
            * Gives the User the ability to START OVER when he wants to *~
            * or will return User back to where they were.  Must push   *~
            * two buttons to start over for safety.                     *~
            *************************************************************

        startover
            u3% = 2%
            call "STARTOVR" (u3%)
            if u3% = 1% then return
            return clear all
              if restart% <> 0% then L29932
              goto inputmode

L29932:     askhdr$ = "* * * W A R N I N G * * *"
            askpf1$ = "THE LAST EXECUTION OF THIS PROGRAM HAD AN ABNORMAL~
        ~ TERMINATION."
            askmid$ = "PRESS RETURN TO CONTINUE PROCESSING."
            askpf2$ = "PRESS PF1 TO CONTINUE START OVER.  PRESS ANY OTHER~
        ~ KEY TO EXIT."

            u3% = 0%
            call "ASKUSER" (u3%, askhdr$, askpf1$, askmid$, askpf2$)
               goto inputmoder
            if u3%  = 0% then editmode
            if u3% <> 1% then exit_program
                  goto inputmoder

        REM *************************************************************~
            *           L O A D   D A T A   F R O M   F I L E           *~
            *-----------------------------------------------------------*~
            * Loads data from File Record Area into Program Variables.  *~
            *************************************************************
        dataload

            readkey$ = "SFC.JBTCPOST.RST." & str(userid$)
            call "READ100" (#1, readkey$, f1%(1))
                if f1%(1) = 0% then return
            get #1, using L30120, fromemp$, toemp$, fromdate$, todate$,   ~
                                 jnlseq%, tctojob$, postshift$
L30120:         FMT XX(20), 2*CH(12), 2*CH(6), BI(4), CH(1), CH(1)
            restart% = 1%
                if fromdate$ = "ALL" then L30170
                   call "DATFMTC" (fromdate$)
                   call "DATFMTC" (todate$)
L30170:         return clear
                errormsg$ = "RESTART IN PROCESS, PRESS PF16 TO CONTINUE."
                gosub set_tctojob_message
                goto editmode

        REM *************************************************************~
            *          S T U F F   D A T A   I N T O   F I L E          *~
            *-----------------------------------------------------------*~
            * Stuffs data from Program Variables into File Record Area. *~
            *************************************************************
        dataput

            if fromdate$ = "ALL" then L31180
               call "DATUFMTC" (fromdate$)
               call "DATUFMTC" (todate$)

L31180:     readkey$ = "SFC.JBTCPOST.RST." & str(userid$)
            call "DELETE" (#1, readkey$, 20%)

            put #1, using L31230, readkey$, fromemp$, toemp$, fromdate$,  ~
                                 todate$, jnlseq%, tctojob$, postshift$, ~
                                 userid$, date, time, " ", " "
L31230:         FMT CH(20), 2*CH(12), 2*CH(6), BI(4), CH(1), CH(1),      ~
                    CH(3), CH(6), CH(8), CH(211), CH(210)
            write #1
            return

        REM *************************************************************~
            *  POST TIMECARD INFORMATION, HERE WE GO.                   *~
            *************************************************************

        post_timecards
L32050:     call "PLOWALTS" (#2, readkey$, key%, 0%, f1%(2))
            if f1%(2) = 0% then return

            if key% = 0% then L32150
               if str(readkey$,,6)   >  str(todate$,,6) then return
               if str(readkey$,7,12) <  str(fromemp$,,12) then L32050
               if str(readkey$,7,12) <= str(toemp$,,12) then process_card
                  init (hex(ff)) str(readkey$,7)   /* NEXT DATE */
                  goto L32050

L32150:        if str(readkey$,,12)  >  str(toemp$,,12) then return
               if str(readkey$,13,6) <  str(fromdate$,,6) then L32050
               if str(readkey$,13,6) <= str(todate$,,6) then process_card
                  init (hex(ff)) str(readkey$,13)  /* NEXT EMPLOYEE */
                  goto L32050

        process_card
            get #2, using L32230, status$, plowkey$, shift%
L32230:         FMT CH(1), POS(8), CH(18), POS(100), BI(1)
            if status$ <> "N" then  L32050
            if postshift% = 0% then L32270
                if shift% <> postshift% then L32050
L32270:     tcdate$, tcdatef$ = str(plowkey$,13,6)
            call "DATEFMT" (tcdatef$)

            call "READ100" (#4, plowkey$, f1%(4))
            if f1%(4) = 0% then toss_new

            init (hex(00)) str(plowkey$,19)

L32350:     call "PLOWNEXT" (#5, plowkey$, 18%, f1%(5))
            if f1%(5) = 0% then kill_old

            if tctojob$ <> "Y" and task_file$ <> "Y" then L32690
            get #5, using L32430, emp$, job$, task$, lbrcls$, etype$,     ~
                                 rate, units, labr, ovhd, wc$, activity$,~
                                 task_type$,                             ~
                                 shift%, dept$, wipcacct$, ovhdacct$,    ~
                                 cdb%, cob%
L32430:         FMT CH(12), POS(26), CH(8), CH(6), POS(50), CH(4),       ~
                    CH(12), 4*PD(14,4), 2*CH(4), CH(1), POS(117), BI(1), ~
                    CH(4), 2*CH(9), 2*BI(1)
            convert shift% to shift$, pic(0)
            if cdb% < 1% or cdb% > buckets% then cdb% = 2%
            if cob% < 1% or cob% > buckets% then cob% = 3%

            units = -units
            labr  = -labr
            ovhd  = -ovhd

            if task$ = " " or task_file$ <> "Y" then L32570
                gosub update_task_file
                goto  L32690

L32570:     if job$ = " " then L32690
            if abs(labr) + abs(ovhd) < .001 then L32690
                if wipcacct$ = " " then wipcacct$ = adjaccount$
                if ovhdacct$ = " " then ovhdacct$ = adjaccount$

                mat costs = zer
                costs(cdb%) = labr
                costs(cob%) = ovhd
                if cdb% = cob% then costs(cdb%) = labr + ovhd

                freetext$ = "REV. OF TIME CARD LABOR:" & tcdatef$
                gosub call_jb2tif

L32690:     call "DELETE" (#5, plowkey$, 25%)
            goto L32350

        kill_old
            call "DELETE" (#4, plowkey$, 18%)

        toss_new
            init (hex(00)) str(plowkey$,19)

L32780:     call "PLOWNEXT" (#3, plowkey$, 18%, f1%(3))
            if f1%(3) = 0% then kill_new

            if tctojob$ <> "Y" and task_type$ <> "Y" then L33070
            get #3, using L32850, emp$, job$, task$, lbrcls$, etype$,     ~
                                 rate, units, labr, ovhd, wc$, activity$,~
                                 task_type$,                             ~
                                 shift%, dept$, wipcacct$, ovhdacct$,    ~
                                 cdb%, cob%
L32850:         FMT CH(12), POS(26), CH(8), CH(6), POS(50), CH(4),       ~
                    CH(12), 4*PD(14,4), 2*CH(4), CH(1), POS(117), BI(1), ~
                    CH(4), 2*CH(9), 2*BI(1)
            convert shift% to shift$, pic(0)
            if cdb% < 1% or cdb% > buckets% then cdb% = 2%
            if cob% < 1% or cob% > buckets% then cob% = 3%
            mat costs = zer
            costs(cdb%) = labr
            costs(cob%) = ovhd
            if cdb% = cob% then costs(cdb%) = labr + ovhd

            if task$ = " " or task_file$ <> "Y" then L32980
                gosub update_task_file
                goto  L33070

L32980:     if job$ = " " then L33070
                if abs(labr) + abs(ovhd) < .001 then L33070

                if wipcacct$ = " " then wipcacct$ = adjaccount$
                if ovhdacct$ = " " then ovhdacct$ = adjaccount$

                freetext$ = "TIME CARD LABOR ADDED:" & tcdatef$
                gosub call_jb2tif

L33070:     get #3 using L33080, record$
L33080:         FMT CH(200)
            call "DELETE" (#3, plowkey$, 25%)
            write #5, using L33080, record$
            goto L32780

        kill_new
            get #2, using L33150, record$
L33150:         FMT CH(200)
            str(record$,1,1) = "P"
            str(record$,114,15) = str(userid$) & str(postdate$,,6) & date

            call "DELETE" (#2, plowkey$, 18%)
            write #4 using L33150, record$

            init (hex(00)) str(plowkey$,19)
            call "PLOWNEXT" (#5, plowkey$, 18%, f1%(5))
               if f1%(5) <> 0% then post_timecards

            call "DELETE" (#4, plowkey$, 18%)

            goto post_timecards

        REM *************************************************************~
            * CALL TO JB2TIF - GET IT DONE                              *~
            *************************************************************

        call_jb2tif
            if tctojob$ <> "Y" then return

            work$ = " "
            put work$ using L33400,etype$, lbrcls$, activity$, rate,      ~
                                  labr, ovhd, ovhdacct$
L33400:         FMT CH(12), 2*CH(4), 3*PD(14,4), CH(9)
            part$ = " "
            put part$, using L33430, 1%, emp$, wc$, tcdate$
L33430:         FMT BI(1), CH(12), CH(4), CH(6)
            put costs$ using L33450, costs()
L33450:         FMT 12*PD(14,4)

            call "JB2TIF"               /* Writes to transaction Image */~
                 ("J2",                 /* Send transaction to JBPOST2 */~
                  0%,                   /* Wake up task flag 0,1,2,9999*/~
                  0%,                   /* Not used if Wake flag = 0   */~
                  5%,                   /* Transaction type            */~
                  hex(10),              /* Priority (within 'J2' only) */~
                  job$,                 /* Job number effected         */~
                  "03",                 /* G/L module to post          */~
                  "MTC",                /* G/L journal to post         */~
                  pstseq%,              /* G/L posting sequence number */~
                  userid$,              /* Who                         */~
                  postdate$,            /* Who                         */~
                  part$,                /* Inventory Part (not really) */~
                  str(wipcacct$,,3),    /* Inventory Store Code """    */~
                  str(wipcacct$,4,6),   /* Inventory Lot Id.    """    */~
                  units,                /* Quantity to process  """    */~
                  work$,                /* To job, MTkey, anything     */~
                  freetext$,            /* Used for trans free text her*/~
                  costs$)               /* Job Costs                   */

            if show% <> 0% then return
               call "SHOSTAT" ("Posting Time Card Data to Jobs.")
               call "JB2TIF" ("J2", 2%, show%)
               show% = 1%
               return

*       ****************************************************************
        update_task_file
*       ****************************************************************
            tfkey$ = str(tcdate$,,6) & str(dept$,,4) & str(task$,,6) &   ~
                     str(emp$,,12)  & str(shift$,,1) & str(lbrcls$,,4) & ~
                     task_type$
            thrs, tval = 0
            call "READ101" (#7, tfkey$, f1%(7))
            if f1%(7) = 1% then get #7 using L33801, thrs, tval
L33801:         FMT POS(35), 2*PD(14,4)
            thrs = thrs + units
            tval = tval + labr
            if thrs <> 0 then L33860
                if f1%(7) = 1% then delete #7
                return
L33860:     put #7 using L33870, tfkey$, thrs, tval, " "
L33870:         FMT CH(34), 2*PD(14,4), CH(50)
            if f1%(7) = 0% then write #7 else rewrite #7
            return


        REM *************************************************************~
            *                S C R E E N   P A G E   1                  *~
            *-----------------------------------------------------------*~
            * Document Edit Screen Number 1.                            *~
            *************************************************************

            deffn'111(fieldnr%)
                  str(line2$,62%) = "JBTCPOST: " & str(cms2v$,,8)
                  if fieldnr% > 0% then L40130
                     init(hex(86)) lfac$()
                     inpmessage$ = edtmessage$
                     goto L40330

L40130:           init(hex(84)) lfac$()
                  on fieldnr% gosub L40260,         /* Card Date Range  */~
                                    L40260,         /* Employee Range   */~
                                    L40260          /* SHIFT TO POST    */
                  goto L40330


                  REM Set FAC's for Upper/Lower Case Input
                      lfac$(fieldnr%) = hex(80)
                      return
L40260:           REM Set FAC's for Upper Case Only Input
                      lfac$(fieldnr%) = hex(81)
                      return
                  REM Set FAC's for Numeric Only Input
                      lfac$(fieldnr%) = hex(82)
                      return

L40330:     accept                                                       ~
               at (01,02),                                               ~
                  "Post Time Cards to Master and Job Files",             ~
               at (01,41), "Version:",                                   ~
               at (01,50), fac(hex(8c)), cms2v$                 , ch(08),~
               at (01,63), "SFC Date:",                                  ~
               at (01,73), fac(hex(8c)), date$                  , ch(08),~
               at (02,02), fac(hex(ac)), line2$                 , ch(79),~
               at (04,02), fac(hex(94)), errormsg$              , ch(79),~
               at (06,02),                                               ~
                  "Time Card Date Range  From:              To:",        ~
               at (06,30), fac(lfac$( 1)), fromdate$            , ch(10),~
               at (06,47), fac(lfac$( 1)), todate$              , ch(10),~
               at (07,02),                                               ~
                  "Employee Range        From:              To:",        ~
               at (07,30), fac(lfac$( 2)), fromemp$             , ch(12),~
               at (07,47), fac(lfac$( 2)), toemp$               , ch(12),~
               at (08,02),                                               ~
                  "Shift to Post",                                       ~
               at (08,30), fac(lfac$( 3)), postshift$           , ch( 1),~
                                                                         ~
               at (10,02), fac(hex(84)), postmsg$               , ch(79),~
                                                                         ~
               at (21,02), fac(hex(a4)),   inpmessage$          , ch(79),~
               at (22,02),                                               ~
                  "(1)Start Over",                                       ~
               at (22,65),                                               ~
                  "(13)Instructions",                                    ~
               at (23,65),                                               ~
                  "(15)Print Screen",                                    ~
               at (24,65), fac(hex(8c)), pf16$                  , ch(16),~
                                                                         ~
               keys(hex(00010d0f10)),                                    ~
               key (keyhit%)

               if keyhit% <> 13 then L40720
                  call "MANUAL" ("JBTCPOST")
                  goto L40330

L40720:        if keyhit% <> 15 then L40760
                  call "PRNTSCRN"
                  goto L40330

L40760:        close ws
               call "SCREEN" addr ("C", u3%, "I", i$(), cursor%())
               return

        REM *************************************************************~
            *                     T E S T   D A T A                     *~
            *-----------------------------------------------------------*~
            * Test data for the items on Screen 1.                      *~
            *************************************************************

            deffn'151(fieldnr%)
                  errormsg$ = " "
                  on fieldnr% gosub L50120,         /* Card Date Range  */~
                                    L50250,         /* Employee Range   */~
                                    L50340          /* SHIFT TO POST    */
                  return
L50120:     REM Test Data for Time Card Date Range
                if fromdate$ <> "ALL" then L50160
                   todate$ = " "
                   return
L50160:         call "DATEOKC" (fromdate$, d1%, errormsg$)
                   if errormsg$ <> " " then return
                call "WHICHPER" (#1, fromdate$, err%)
                   if err% <> 0% then L50180
                errormsg$ = "From date outside G/L Posting Window."
                   return
L50180:         if todate$ = " " or todate$ = blankdate$ ~
                               then todate$ = fromdate$
                call "DATEOKC" (todate$, d2%, errormsg$)
                   if errormsg$ <> " " then return
                call "WHICHPER" (#1, todate$, err%)
                   if err% <> 0% then L50210
                errormsg$ = "From date outside G/L Posting Window."
                   return
L50210:         if d1% <= d2% then return
                errormsg$ = "Invalid date range selection.  Please re-ent~
        ~er."
                return
L50250:     REM Test Data for Employee Range
                if fromemp$ <> "ALL" then L50290
                   toemp$ = " "
                   return
L50290:         if toemp$ = " " then toemp$ = fromemp$
                if fromemp$ <= toemp$ then return
                errormsg$ = "Invalid employee range selection.  Please re~
        ~-enter."
                return
L50340:     REM Test Data for Shift to Post
                postshift% = 0%
                if postshift$ = " " then return
                if postshift$ < "1" then L50410
                if postshift$ > "4" then L50410
                   convert postshift$ to postshift%, data goto L50410
                   return
L50410:         errormsg$ = "Enter ' ' or '1' - '4', please."
                return


        REM *************************************************************~
            *  A SECTION FOR VARIOUS AND SUNDRY COMMON ROUTINES         *~
            *************************************************************

        read_tctojob
               tctojob$ = "Y"
               call "READ100" (#1, "SWITCHS.SFC", f1%(1))
                  if f1%(1) = 0% then L63130
               get #1, using L63090, tctojob$
L63090:            FMT POS(27), CH(1)

        set_tctojob_message

L63130:        postmsg$ = "Time Card Data Will"
               if tctojob$ <> "Y" then postmsg$ = postmsg$ & " NOT"
               postmsg$ = postmsg$ & " Be Posted To Jobs."

               return

        REM *************************************************************~
            *  HERES WHERE WE BAIL OUT BECAUSE OF WHATEVER.             *~
            *************************************************************

        exit_user

            askpf1$ = "YOU ARE NOT LISTED AS A VALID USER IN THIS DATA BA~
        ~SE."
            goto exit_error

        exit_date

            askpf1$ = "YOUR POSTING DATE IS NOT WITHIN THE CURRENT RANGE."
            goto exit_error

        exit_adj

            askpf1$ = "THE FISCAL DATE STRUCTURE COULD NOT BE FOUND.  G/L~
        ~ POSTING IS NOT POSSIBLE."
            goto exit_error

        exit_error

            askhdr$ = "* * * S O R R Y * * *"
            askmid$ = " "
            askpf2$ = "PRESS RETURN TO EXIT PROGRAM"

            u3% = 0%

            call "ASKUSER" (u3%, askhdr$, askpf1$, askmid$, askpf2$)

        REM THISPROGRAMWASGENERATEDBYGENPGMAPROPRIETRYPRODUCTOFCAELUSASSO~
            *                          E X I T                          *~
            *-----------------------------------------------------------*~
            * Terminates execution (files closed automatically).        *~
            *-----------------------------------------------------------*~
            * THIS PROGRAM CONTAINS VALUABLE TRADE SECRETS AND PROPRIE- *~
            * TARY ASSETS OF CAELUS ASSOCIATES, INC., SPOKANE, WA, EM-  *~
            * BODYING SUBSTANTIAL CREATIVE EFFORTS  AND CONFIDENTIAL    *~
            * INFORMATION.  UNAUTHORIZED USE, COPYING, DECOMPILING,     *~
            * TRANSLATING, DISCLOSURE, OR TRANSFER OF IT IS PROHIBITED. *~
            * COPYRIGHT (C) 1986  AN UNPUBLISHED WORK BY CAELUS ASSSO-  *~
            * CIATES, INC., SPOKANE, WA.  ALL RIGHTS RESERVED.          *~
            CAELUSASSOCIATESSPOKANEWASHINGTONALLRIGHTSRESERVEDCAELUSASSOC

        exit_program

            call "JBJNLCLS" ("J2", userid$, "03", "MTC", pstseq%, ret%)
            call "SHOSTAT" ("One moment please.")

            end

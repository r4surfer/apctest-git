#	b_cgen makefile 
#
# makefile for 'c' generation, COMPILE and Linkage of Source Programs!

# Set up the variables
CFLAGS=-Ae -D_HPUX_SOURCE
LD=ld
LDFLAGS= +s -a archive_shared +b :


# Location for the stored objects to be shipped.
OBJ=../object2

# Extra object files for routines that MUST be explicitly loaded
EXT_OBJ=../load2/cuserid.o /opt/langtools/lib/crt0.o

# b_cgen, wisp & disam load modules

CMS_LIB=-lasm -lscrn -lfile -lmat -lwb -lutil -lcmath -lutil -lasm -ldisam \
-ldewisp

# System libraries
M_LIB=-lcurses -lm -lc 

# CMS Subroutine load libraries

CMSSUB_LIBX= \
  -ll1asr2       -ll1ass2       -ll1ass3       -ll1bss2       -ll1css2        \
  -ll1dss2       -ll1ess2       -ll2asr2       -ll2asr3       -ll2ass2        \
  -ll2ass3       -ll2bss2       -ll2css2       -ll3asr2       -ll3ass2        \
  -ll3ass3       -ll4asr2       -ll4asr3       -ll4ass2       -ll4ass3        \
  -ll5asr2       -ll5asr3       -ll5ass2       -ll5ass3       -ll6asr3        \
  -ll6ass2       -ll6ass3       -ll7asr3       -ll7ass3       -ll8asr3        \
  -ll8ass3       -ll9asr2       -ll9ass3       -llaasr3       -llaass2        \
  -llaass3       -llbass3       -llcass3       -lldasr2       -lldasr3        \
  -lldass2       -lldass3       -llpacss       -llxacss       

CMSSUB_LIB=$(CMSSUB_LIBX) $(CMSSUB_LIBX) $(CMSSUB_LIBX) $(CMSSUB_LIBX)

# Define the Combined Parameters

CMSPATH= \
/cms2/apctest1

CMS_IFLAGS=-I$(CMSPATH)/include1
BC_IFLAGS=-I$(CMSPATH)/include2
CMSSUB_DIR=-L$(CMSPATH)/load1
CMS_DIR=-L$(CMSPATH)/load2

INC_FLAGS=$(CMS_IFLAGS) $(BC_IFLAGS)
LD_DIRS=$(CMSSUB_DIR) $(CMS_DIR)
LD_LIBS=$(CMSSUB_LIB) $(CMS_LIB) $(M_LIB)

COMPILE=../b_cgen

.SUFFIXES:
.SUFFIXES:	.a .o .c .bas .csv .c.sav

#	Define the steps from .bas to executable
.bas:
	@echo  == Using .bas to executable rule  ==
	$(COMPILE) ./$*
	$(CC) -c $(CFLAGS) $(INC_FLAGS) ./$*.c 
	$(LD) ./$*.o $(EXT_OBJ) $(LDFLAGS) $(LD_DIRS) $(LD_LIBS) -o $(OBJ)/$@
	strip $(OBJ)/$@
	rm -f ./$@.?

# Define the steps from .c to executable
.c:
	@echo  == Using .c to executable rule  ==
	$(CC) -c $(CFLAGS) $(INC_FLAGS) ./$*.c 
	$(LD) ./$*.o $(EXT_OBJ) $(LDFLAGS) $(LD_DIRS) $(LD_LIBS) -o $(OBJ)/$@
	strip $(OBJ)/$@

#       Define the steps from .csv to executable
.csv:
	@echo  == Using .csv to executable rule  ==
	rm -f ./$*.c
	touch ./$*.c
	cat ./$*.csv >> ./$*.c
	$(CC) -c $(CFLAGS) $(INC_FLAGS) ./$*.c
	$(LD) ./$*.o $(EXT_OBJ) $(LDFLAGS) $(LD_DIRS) $(LD_LIBS) -o $(OBJ)/$@
	strip $(OBJ)/$@
	rm -f ./$@.?

#       Define the steps from .c.sav to executable
.c.sav:
	@echo  == Using .c.sav to executable rule  ==
	rm -f ./$*.c
	touch ./$*.c
	cat ./$*.c.sav >> ./$*.c
	$(CC) -c $(CFLAGS) $(INC_FLAGS) ./$*.c
	$(LD) ./$*.o $(EXT_OBJ) $(LDFLAGS) $(LD_DIRS) $(LD_LIBS) -o $(OBJ)/$@
	strip $(OBJ)/$@
	rm -f ./$@.?

all:	target	\
  amtbomcd       amtbomif       amtbompm       apcarcrd       apcbar01        \
  apcbargn       apcclock       apccompt       apccsaud       apccsfix        \
  apccst00       apccst01       apccst02       apccst03       apccst05        \
  apccst06       apccst07       apccst08       apccst09       apccsthp        \
  apccstlr       apccstsc       apcctfix       apccuteq       apccutsc        \
  apcdev         apcedi01       apcedi02       apcedi04       apcedi05        \
  apcedi06       apcedi07       apcedi08       apcedi09       apcediso        \
  apcefftb       apcemped       apcempmn       apcemppg       apcemppt        \
  apcemprp       apcempvr       apcequat       apcequip       apchnycn        \
  apchnyqn       apcinsr1       apcinsrt       apcinvbo       apcinven        \
  apcinvun       apcivavg       apclabls       apclist2       apclogo         \
  apcmkfil       apcordhs       apcpayfx       apcpipck       apcpl41a        \
  apcpla40       apcpla42       apcpla44       apcpla45       apcpln01        \
  apcpln02       apcpln03       apcpln04       apcpln05       apcpln06        \
  apcpln10       apcpln11       apcpln43       apcpln47       apcpln48        \
  apcpln49       apcpln50       apcpln99       apcprc01       apcprc02        \
  apcprc03       apcprcqt       apcpurgs       apcquick       apcrawmt        \
  apcrg23b       apcrga         apcrga01       apcrga02       apcrga03        \
  apcrga04       apcrga10       apcrga11       apcrga12       apcrga13        \
  apcrga21       apcrga22       apcrga24       apcrga30       apcrga32        \
  apcrolex       apcropcc       apcrpt01       apcrpt02       apcrpt04        \
  apcrpt10       apcrpt11       apcrpt15       apcrpzip       apcsale1        \
  apcsales       apcscan2       apcscann       apcshape       apcsku          \
  apcsls00       apcsls01       apcsls02       apcsls03       apcsoaud        \
  apcsoavg       apcstock       apcupcbd       apcupdte       apcusrid        \
  apcvend        apcvendr       apcvndpr       ariinput       ariprint        \
  arirprnt       ariupdte       armstmnt       armtbsum       bckacks         \
  bckcrinp       bckdsply       bckfastr       bckhist        bckupdte        \
  carlos         cprcdein       cprcderp       crcinput       crcupdte        \
  cusinput       cuslabel       cuslist1       cuslist2       efficita        \
  ewdbckup       ewdclean       ewdclndt       ewdcompt       ewdconvt        \
  ewdcst01       ewdcussb       ewdefftb       ewdftp02       ewdftp03        \
  ewdhnyad       ewdintcp       ewdlogck       ewdlogin       ewdlogou        \
  ewdpla67       ewdpln52       ewdpln53       ewdpln54       ewdpln55        \
  ewdpln56       ewdpln57       ewdpln58       ewdpln59       ewdpln60        \
  ewdpln61       ewdpln62       ewdpln63       ewdpln64       ewdpln65        \
  ewdpln66       ewdpln67       ewdpln68       ewdpln69       ewdpln70        \
  ewdpln71       ewdpln72       ewdpln73       ewdpln75       ewdpln76        \
  ewdpln77       ewdpln79       ewdsls00       ewdtbage       ewdtbsum        \
  ewdugsls       ewdvlrpt       frdefine       frprint1       frprint2        \
  frprint3       gencdsin       glrollyr       gltrial        hnyaddjn        \
  hnyaddns       hnydlete       hnydsply       hnyinput       hnyslow         \
  hnyturns       hnyvlrpt       jbquote1       jbquote2       payinput        \
  poprint        procrcvi       rcvinput       rgadatfx       ropcalc         \
  ropclsin       rophnyin       ropsrch        ropsysin       satgtinp        \
  shpactin       shpdocpr       shpschin       shpxappr       stcdtlrp        \
  stcinput       strinput       test           txtbuild       txtclear        \
  txtshow        updariin       updcrcin       vbkdsply       vbkinput        \
  venbfinp       vendlete       venpurrp       

target:
	(if ( test ! -d $(OBJ) ) then       \
		mkdir $(OBJ);               \
	fi)


clean:
	rm -f ./*.? ./core
